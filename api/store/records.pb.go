// Code generated by protoc-gen-go. DO NOT EDIT.
// source: store/records.proto

package store

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Record struct {
	// global item UUID. used for purchases
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// name of the record
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// artist who recorded the record
	Artist string `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	// price of the record
	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c1099066ecf1f9e, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Record) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Record) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *Record) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type ListRecordsResponse struct {
	Records              []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListRecordsResponse) Reset()         { *m = ListRecordsResponse{} }
func (m *ListRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRecordsResponse) ProtoMessage()    {}
func (*ListRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c1099066ecf1f9e, []int{1}
}

func (m *ListRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRecordsResponse.Unmarshal(m, b)
}
func (m *ListRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRecordsResponse.Marshal(b, m, deterministic)
}
func (m *ListRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRecordsResponse.Merge(m, src)
}
func (m *ListRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRecordsResponse.Size(m)
}
func (m *ListRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRecordsResponse proto.InternalMessageInfo

func (m *ListRecordsResponse) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "store.Record")
	proto.RegisterType((*ListRecordsResponse)(nil), "store.ListRecordsResponse")
}

func init() {
	proto.RegisterFile("store/records.proto", fileDescriptor_7c1099066ecf1f9e)
}

var fileDescriptor_7c1099066ecf1f9e = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x3f, 0x6b, 0xc4, 0x30,
	0x0c, 0xc5, 0xeb, 0xfb, 0x93, 0xa3, 0x3a, 0xba, 0xe8, 0xca, 0x61, 0xd2, 0x25, 0x64, 0x69, 0x26,
	0x07, 0xd2, 0xbd, 0x4b, 0xe9, 0x56, 0x3a, 0xf8, 0x03, 0x14, 0xf2, 0x47, 0x0d, 0x86, 0x26, 0x36,
	0xb6, 0x33, 0xf4, 0xdb, 0x97, 0xd8, 0x0e, 0x74, 0xb8, 0x4d, 0xfa, 0xe9, 0x49, 0x7a, 0x0f, 0x2e,
	0xce, 0x6b, 0x4b, 0xb5, 0xa5, 0x5e, 0xdb, 0xc1, 0x09, 0x63, 0xb5, 0xd7, 0x78, 0x0c, 0x30, 0x7f,
	0x1a, 0xb5, 0x1e, 0x7f, 0xa8, 0x0e, 0xb0, 0x5b, 0xbe, 0x6b, 0x9a, 0x8c, 0xff, 0x8d, 0x9a, 0xf2,
	0x0b, 0x32, 0x19, 0x96, 0x10, 0xe1, 0xb0, 0x2c, 0x6a, 0xe0, 0xac, 0x60, 0xd5, 0xbd, 0x0c, 0xf5,
	0xca, 0xe6, 0x76, 0x22, 0xbe, 0x8b, 0x6c, 0xad, 0xf1, 0x0a, 0x59, 0x6b, 0xbd, 0x72, 0x9e, 0xef,
	0x03, 0x4d, 0x1d, 0x3e, 0xc2, 0xd1, 0x58, 0xd5, 0x13, 0x3f, 0x14, 0xac, 0xda, 0xc9, 0xd8, 0x94,
	0xaf, 0x70, 0xf9, 0x50, 0xce, 0xc7, 0x1f, 0x4e, 0x92, 0x33, 0x7a, 0x76, 0x84, 0xcf, 0x70, 0x4a,
	0x5e, 0x39, 0x2b, 0xf6, 0xd5, 0xb9, 0x79, 0x10, 0xc1, 0xac, 0x88, 0x42, 0xb9, 0x4d, 0x9b, 0x4f,
	0x38, 0xa5, 0x5d, 0x7c, 0x83, 0xf3, 0xbf, 0x53, 0x78, 0x15, 0x31, 0x97, 0xd8, 0x72, 0x89, 0xf7,
	0x35, 0x57, 0x9e, 0xa7, 0x4b, 0x37, 0xde, 0x96, 0x77, 0x5d, 0x16, 0xd4, 0x2f, 0x7f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x99, 0x67, 0x15, 0x79, 0x31, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RecordsClient is the client API for Records service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecordsClient interface {
	ListRecords(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListRecordsResponse, error)
}

type recordsClient struct {
	cc grpc.ClientConnInterface
}

func NewRecordsClient(cc grpc.ClientConnInterface) RecordsClient {
	return &recordsClient{cc}
}

func (c *recordsClient) ListRecords(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListRecordsResponse, error) {
	out := new(ListRecordsResponse)
	err := c.cc.Invoke(ctx, "/store.Records/ListRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecordsServer is the server API for Records service.
type RecordsServer interface {
	ListRecords(context.Context, *empty.Empty) (*ListRecordsResponse, error)
}

// UnimplementedRecordsServer can be embedded to have forward compatible implementations.
type UnimplementedRecordsServer struct {
}

func (*UnimplementedRecordsServer) ListRecords(ctx context.Context, req *empty.Empty) (*ListRecordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRecords not implemented")
}

func RegisterRecordsServer(s *grpc.Server, srv RecordsServer) {
	s.RegisterService(&_Records_serviceDesc, srv)
}

func _Records_ListRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordsServer).ListRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/store.Records/ListRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordsServer).ListRecords(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Records_serviceDesc = grpc.ServiceDesc{
	ServiceName: "store.Records",
	HandlerType: (*RecordsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRecords",
			Handler:    _Records_ListRecords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "store/records.proto",
}
