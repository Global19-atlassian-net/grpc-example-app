---
# Source: grpc-example-app/templates/namespace.yaml
# Code generated by skv2. DO NOT EDIT.

apiVersion: v1
kind: Namespace
metadata:
  name: grpc-example-app
---
# Source: grpc-example-app/templates/deployment.yaml
# Service account for books

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: books
  name: books
  namespace: grpc-example-app
---
# Source: grpc-example-app/templates/deployment.yaml
# Service account for records

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: records
  name: records
  namespace: grpc-example-app
---
# Source: grpc-example-app/templates/deployment.yaml
# Service for books

apiVersion: v1
kind: Service
metadata:
  labels:
    app: books
  name: books
  namespace: grpc-example-app
spec:
  selector:
    app: books
  type: ClusterIP
  ports:
  - name: grpc
    port: 8080
---
# Source: grpc-example-app/templates/deployment.yaml
# Service for records

apiVersion: v1
kind: Service
metadata:
  labels:
    app: records
  name: records
  namespace: grpc-example-app
spec:
  selector:
    app: records
  type: ClusterIP
  ports:
  - name: grpc
    port: 8080
---
# Source: grpc-example-app/templates/deployment.yaml
# Deployment manifest for books

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: books
  name: books
  namespace: grpc-example-app
spec:
  selector:
    matchLabels:
      app: books
  template:
    metadata:
      labels:
        app: books
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: books
      containers:
      - image: docker.io/soloio/example-store-grpc:v1
        args:
        - --service=books
        imagePullPolicy: IfNotPresent
        name: books
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
---
# Source: grpc-example-app/templates/deployment.yaml
# Deployment manifest for records

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: records
  name: records
  namespace: grpc-example-app
spec:
  selector:
    matchLabels:
      app: records
  template:
    metadata:
      labels:
        app: records
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: records
      containers:
      - image: docker.io/soloio/example-store-grpc:v1
        args:
        - --service=records
        imagePullPolicy: IfNotPresent
        name: records
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
---
# Source: grpc-example-app/templates/configmap.yaml
# Code generated by skv2. DO NOT EDIT.
---
# Source: grpc-example-app/templates/deployment.yaml
# Code generated by skv2. DO NOT EDIT.
---
# Source: grpc-example-app/templates/rbac.yaml
# Code generated by skv2. DO NOT EDIT.
